server.port=${PORT:2019}

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false


#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=none
spring.datasource.initialization-mode=never

#Switch if it is necessary to rebuilt database
#spring.jpa.hibernate.ddl-auto=create
#spring.datasource.initialization-mode=always

# For h2 database
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console


# For PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/usemytools
#spring.datasource.username=postgres
#spring.datasource.password=${MYDBPASSWORD}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#postgresql heroku
spring.datasource.url=${SPRING_DATA_URL:jdbc:postgresql://ec2-23-21-91-183.compute-1.amazonaws.com:5432/da55t31lrtgrre?user=gwutohkpvwoumw&password=401c53e44df1e7ccc04c1b6e3043c2de6ebca43b9283b53ff6c814c350659735&sslmode=require}
spring.datasource.username=gwutohkpvwoumw
spring.datasource.password=401c53e44df1e7ccc04c1b6e3043c2de6ebca43b9283b53ff6c814c350659735
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#end postgresqul heroku configuration